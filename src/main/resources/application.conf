akka {
  loglevel = DEBUG
}

dev {
  akka {
    loglevel = INFO
  }
}

# timed assertiions test config
specialTimedAssertionsConfig {
  akka.test.single-expect-default = 1s
}

# intercepting log messages test
interceptingLogMessages {
  akka {
    loggers = ["akka.testkit.TestEventListener"]
  }
}


# routers demo
routersDemo {
  akka {
    actor.deployment {
      /poolMaster2 {
        router = round-robin-pool
        nr-of-instances = 5
      }
      /groupMaster2 {
        router = round-robin-group
        routees.paths = ["/user/slave_1","/user/slave_2","/user/slave_3","/user/slave_4", "/user/slave_5"]
      }
    }
  }
}


my-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 3
  }
  throughput = 30
}

dispatchersDemo {
  akka.actor.deployment {
    /rtjvm {
      dispatcher = my-dispatcher
    }
  }
}



mailboxesDemo {
  support-ticket-dispatcher {
    mailbox-type = "part5Infra.MailBoxes$SupportTicketPriorityMailbox"
  }
  control-mailbox {
    mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
  }

  akka.actor.deployment {
    /altControlAwareActor {
      mailbox = control-mailbox
    }
  }
}
